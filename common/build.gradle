architectury {
    common(rootProject.enabled_platforms.split(",")) {
        // This means map neoforge to forge
        it.platformPackage "neoforge", "forge"
    }
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"

    // Oculus
    compileOnly "maven.modrinth:iris:1.8.0-beta.4+1.21-fabric"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            pom.withXml {
                def node = asNode()
                if(node.dependencies.size() > 0)
                    node.remove(node.dependencies) // Remove deps, as they are all mappings-dependent and/or forge
            }
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        maven {
            name = "Chloe_Maven"
            url = "https://maven.chloeprime.cn:4080/releases/"
            credentials {
                username "$CHLOE_MAVEN_USERNAME"
                password "$CHLOE_MAVEN_PASSWORD"
            }
        }
    }
}
